A "Prompt Decorator" is an instruction added to a prompt to modify the output or influence how the response is generated.  

Please retain this definition in memory, as I will use it in future interactions.  

---

### Defined Prompt Decorators:

#### `+++Reasoning`  
When this decorator is included in a prompt, you must begin your response with a detailed explanation of the reasoning and logic behind your answer. The explanation should be clear, structured, and directly relevant to the prompt. This requirement must always be followed when the decorator is present.  

---

#### `+++StepByStep`  
When this decorator is used, your response must be structured into a sequence of logically ordered steps. Each step should be explicitly labeled, such as:  
**[Step 1] → [Step 2] → ... → [Final Step]**.  
This structured progression must always be followed when the decorator is present.  

---

#### `+++Socratic`  
When this decorator is present, engage in a Socratic approach by posing clarifying questions before providing a direct answer. The response should encourage critical thinking and follow this structured sequence:  
**[Restate Question] → [Clarify Definitions] → [Analyze Assumptions] → [Explore Perspectives] → [Use Analogies/Examples] → [Encourage Further Inquiry]**.  
This structure must always be maintained when the decorator is used.  

---

#### `+++Debate`  
When this decorator is applied, your response must analyze multiple viewpoints before reaching a conclusion. The response should follow this format:  
**[State Position] → [Perspective 1] → [Perspective 2] → ... → [Analysis & Rebuttal] → [Conclusion]**.  
Ensuring a balanced discussion of differing perspectives is essential when this decorator is present.  

---

#### `+++Critique`  
When this decorator is included, your response must provide constructive criticism by assessing both strengths and weaknesses before suggesting improvements. The structure should be:  
**[Identify Subject] → [Highlight Strengths] → [Critique Weaknesses] → [Suggest Improvements] → [Constructive Conclusion]**.  
This balanced critique format must always be used when the decorator is specified.  

---

#### `+++Refine(iterations=N)`  
When this decorator appears, your response must go through multiple refinements, improving clarity, accuracy, or effectiveness in each step. The number of iterations is specified as **N**, and the format should follow:  
**[Iteration 1] → [Iteration 2] → ... → [Final Answer]**.  
Each refinement must enhance the response step by step.  

---

#### `+++CiteSources`  
When this decorator is present, all claims must be supported by credible references. Your response should follow this structure:  
**[Initial Answer] → [Identify Key Claims] → [Find Credible Sources] → [Integrate Citations] → [Provide Full References] → [Verify Credibility] → [Final Answer]**.  
Citations must be included in all cases where verification is necessary.  

---

#### `+++FactCheck`  
When this decorator is used, you must verify the factual accuracy of key claims before finalizing the response. The structure should be:  
**[Initial Answer] → [Identify Claims] → [Research & Verify] → [Mark Uncertainties] → [Provide Verified Sources] → [Final Answer]**.  
If verification is inconclusive, uncertainties must be explicitly marked.  

---

#### `+++OutputFormat(format=FORMAT)`  
When this decorator is applied, your response must strictly adhere to the specified output format. The format is defined by the parameter:  
- **`format (json | markdown | yaml | xml | …)`** – Specifies the desired output structure.  

The response must be formatted accordingly, without unnecessary deviations.  

---

#### `+++Tone(style=STYLE)`  
When this decorator is included, the response tone must match the specified style. The tone is defined by the parameter:  
- **`style (formal | casual | friendly | technical | humorous | …)`** – Specifies the desired tone of the response.  

The entire response must be consistent with the requested style.  

---

These definitions must always be followed when the corresponding decorator is present in a prompt. Please retain them in memory, as I will use them in future interactions.